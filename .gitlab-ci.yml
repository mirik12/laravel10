stages:
  - Test
  - Build
  - Deploy

variables:
  TERM: xterm-color
  # REGISTRY_HOST: gitlab.com
  REGISTRY_NAMESPACE: mirik12mirik

Test:
  stage: Test
  tags:
    - docker
  image:
    name: sonarsource/sonar-scanner-cli:4.6
    entrypoint: [""]

  variables:
    # Tells git to fetch all the branches of the project,
    # required by the analysis task
    GIT_DEPTH: "0"
    # Defines the location of the analysis task cache
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    SRC_BRANCH: "${CI_COMMIT_REF_NAME}"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache

  script:
    - >-
      sonar-scanner
      -Dsonar.host.url=https://sonarcloud.io
      -Dsonar.qualitygate.wait=true
      -Dsonar.scm.provider=git
      -Dsonar.branch.name=${SRC_BRANCH}
      -Dsonar.organization=mirik-laravel
      -Dsonar.projectKey=mirik-laravel_php
      -Dsonar.sources=.
      -Dsonar.host.url=https://sonarcloud.io
  only:
    - branches
    - merge_requests
  except:
    - main

Build:
  stage: Build
  tags:
    - docker
  image: docker:latest
  services:
    - name: docker:dind
      alias: docker
  variables:
    PHP_IMAGE: php:8.2-fpm-alpine
    NGINX_IMAGE: nginx:latest
    TARGET_APP: php_dev
    TARGET_PROXY: nginx_dev
    DOCKER_FILE: ${CI_PROJECT_DIR}/k8s/Dockerfile
  script:
    - echo ${CI_REGISTRY_PASSWORD} | docker login --username ${CI_REGISTRY_USER} --password-stdin

    - TARGET_IMAGE="${REGISTRY_NAMESPACE}/${TARGET_APP}"
    - >
      echo "Build ${TARGET_IMAGE}:${CI_COMMIT_SHORT_SHA}" &&
      docker build -t ${TARGET_IMAGE}:${CI_COMMIT_SHORT_SHA}
      -t ${TARGET_IMAGE}:latest
      --build-arg PHP_IMAGE=$PHP_IMAGE
      --build-arg NGINX_IMAGE=$NGINX_IMAGE
      --cache-from type=registry,ref=${TARGET_IMAGE}:latest
      --cache-to type=inline
      --file "${DOCKER_FILE}"
      --target=${TARGET_APP}
      --push .

    - TARGET_IMAGE="${REGISTRY_NAMESPACE}/${TARGET_PROXY}"
    - >
      echo "Build ${TARGET_IMAGE}:${CI_COMMIT_SHORT_SHA}" &&
      docker build -t ${TARGET_IMAGE}:${CI_COMMIT_SHORT_SHA}
      -t ${TARGET_IMAGE}:latest
      --build-arg PHP_IMAGE=$PHP_IMAGE
      --build-arg NGINX_IMAGE=$NGINX_IMAGE
      --cache-from type=registry,ref=${TARGET_IMAGE}:latest
      --cache-to type=inline
      --file "${DOCKER_FILE}"
      --target=${TARGET_PROXY}
      --push .
  only:
    - main

Deploy:
  stage: Deploy
  tags:
    - docker
  image:
    name: fluxcd/helm-operator:1.4.4
  script:
    - helm deploy -f
  only:
    - main
  when: manual
